<% layout('/layouts/boilerplate') %>
<h1>All Furnitures</h1>
<div id="myMap" class="container-fluid" style="height: 60dvh"></div>

<script>
  const allFurnitures = <%- JSON.stringify(allFurnitures) %>;
</script>
<script
  type="text/javascript"
  src="http://www.bing.com/api/maps/mapcontrol?callback=GetMap&setMkt=en-AU&setLang=en&key=<%=process.env.MAP_KEY%>"
  defer
></script>
<script type="text/javascript">
  async function GetMap() {
    const map = new Microsoft.Maps.Map('#myMap', {});
    map.setView({
      credentials: 'Your Bing Maps Key',
      center: new Microsoft.Maps.Location(-34.3915, 150.85),
      mapTypeId: Microsoft.Maps.MapTypeId.road,
      zoom: 12,
    });

    // Function to add pins to the map with initial content
    function addPinsWithContent(longitude, latitude, suburb, count) {
      // Provide location to add pin on map
      const location = new Microsoft.Maps.Location(longitude, latitude);
      // Create a pin on the map

      const pin = new Microsoft.Maps.Pushpin(location, {
        title: suburb,
        subTitle: '',
        text: count,
        color: '#3468C0',
      });

      // Add the pin to the map
      map.entities.push(pin);
    }

    // Add pins to the map with initial content
    // to do display sum of the furnitures in each suburb
    // TODO: when user create new furniture, update the geolocations
    const groupedFurnitures = Object.groupBy(
      allFurnitures,
      ({ suburb }) => suburb
    );

    const cityGroup = Object.groupBy(allFurnitures, ({ city }) => city);
    console.log(cityGroup);
    const addPushPinBasedOnArray = (array) => {
      for (let location in array) {
        const furniture = array[location];
        const funritureNumber = String(furniture.length);
        const coordinate = furniture[0].geolocation.coordinates;
        addPinsWithContent(
          coordinate[0],
          coordinate[1],
          location,
          funritureNumber
        );
      }
    };
    addPushPinBasedOnArray(groupedFurnitures);

    // Function to update pin content based on zoom level
    function updatePinContentBasedOnZoomLevel(zoomLevel) {
      // Example: Update pin text based on zoom level
      const pinNumber = map.entities.getLength();
      if (zoomLevel < 11) {
        map.entities.clear();
        addPushPinBasedOnArray(cityGroup);
      } else {
        map.entities.clear();
        addPushPinBasedOnArray(groupedFurnitures);
      }
    }

    // Function to handle map zoom level change
    function handleZoomLevelChange() {
      const currentZoomLevel = map.getZoom(); // Get current zoom level of the map
      // Update pin content based on current zoom level
      updatePinContentBasedOnZoomLevel(currentZoomLevel);
    }

    // Event listener for map zoom level change
    Microsoft.Maps.Events.addHandler(map, 'viewchange', handleZoomLevelChange);
  }
</script>
<%for(let furniture of allFurnitures){%>
<div class="card mb-3">
  <div class="row g-0">
    <div class="col-md-3">
      <% if (furniture.img.length >=1){%>
      <img
        src="<%=furniture.img[0].url%>"
        class="img-fluid"
        alt="furniture image"
      />
      <%}else{%>
      <p style="text-align: center"><b>Poster hasn't shared any pictures</b></p>
      <%}%>
    </div>
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title"><%=furniture.name%></h5>
        <p class="card-text">$<%=furniture.price%></p>
        <p class="card-text">
          Location: <%=furniture.suburb%>,<%=furniture.city%>
        </p>
        <a href="/furnitures/<%=furniture._id%>" class="card-link">Details</a>
      </div>
    </div>
  </div>
</div>

<%}%>
